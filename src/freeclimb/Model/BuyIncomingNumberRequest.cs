/*
 * FreeClimb API
 *
 * FreeClimb is a cloud-based application programming interface (API) that puts the power of the Vail platform in your hands. FreeClimb simplifies the process of creating applications that can use a full range of telephony features without requiring specialized or on-site telephony equipment. Using the FreeClimb REST API to write applications is easy! You have the option to use the language of your choice or hit the API directly. Your application can execute a command by issuing a RESTful request to the FreeClimb API. The base URL to send HTTP requests to the FreeClimb REST API is: /apiserver. FreeClimb authenticates and processes your request.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@freeclimb.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel.DataAnnotations;
using System.IO;
using System.Linq;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using freeclimb.Enums;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using OpenAPIDateConverter = freeclimb.Client.OpenAPIDateConverter;

namespace freeclimb.Model
{
    /// <summary>
    /// BuyIncomingNumberRequest
    /// </summary>
    [DataContract(Name = "BuyIncomingNumberRequest")]
    public partial class BuyIncomingNumberRequest : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="BuyIncomingNumberRequest" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected BuyIncomingNumberRequest() { }

        /// <summary>
        /// Initializes a new instance of the <see cref="BuyIncomingNumberRequest" /> class.
        /// </summary>
        /// <param name="phoneNumber">Phone number to purchase in E.164 format (as returned in the list of Available Phone Numbers). (required).</param>
        /// <param name="alias">Description for this new incoming phone number (max 64 characters)..</param>
        /// <param name="applicationId">ID of the application that should handle phone calls to the number..</param>
        public BuyIncomingNumberRequest(
            string phoneNumber = default(string),
            string alias = default(string),
            string applicationId = default(string)
        )
        {
            // to ensure "phoneNumber" is required (not null)
            if (phoneNumber == null)
            {
                throw new ArgumentNullException(
                    "phoneNumber is a required property for BuyIncomingNumberRequest and cannot be null"
                );
            }
            this.PhoneNumber = phoneNumber;

            this.Alias = alias;

            this.ApplicationId = applicationId;
        }

        /// <summary>
        /// Phone number to purchase in E.164 format (as returned in the list of Available Phone Numbers).
        /// </summary>
        /// <value>Phone number to purchase in E.164 format (as returned in the list of Available Phone Numbers).</value>
        [DataMember(Name = "phoneNumber", IsRequired = true, EmitDefaultValue = true)]
        public string PhoneNumber { get; set; }

        /// <summary>
        /// Description for this new incoming phone number (max 64 characters).
        /// </summary>
        /// <value>Description for this new incoming phone number (max 64 characters).</value>
        [DataMember(Name = "alias", EmitDefaultValue = false)]
        public string Alias { get; set; }

        /// <summary>
        /// ID of the application that should handle phone calls to the number.
        /// </summary>
        /// <value>ID of the application that should handle phone calls to the number.</value>
        [DataMember(Name = "applicationId", EmitDefaultValue = false)]
        public string ApplicationId { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class BuyIncomingNumberRequest {\n");
            sb.Append("  PhoneNumber: ").Append(PhoneNumber).Append("\n");
            sb.Append("  Alias: ").Append(Alias).Append("\n");
            sb.Append("  ApplicationId: ").Append(ApplicationId).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(
                this,
                Newtonsoft.Json.Formatting.Indented,
                new JsonSerializerSettings { NullValueHandling = NullValueHandling.Ignore }
            );
        }

        /// <summary>
        /// Retrieve the KVP Dictionary for the BuyIncomingNumberRequest instance.
        /// </summary>
        /// <returns>KVP Dictionary</returns>
        public virtual IDictionary<string, object> ToKvp()
        {
            IDictionary<string, object> props = new Dictionary<string, object>();
            props.Add("phoneNumber", PhoneNumber);
            props.Add("alias", Alias);
            props.Add("applicationId", ApplicationId);
            return props;
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(
            ValidationContext validationContext
        )
        {
            yield break;
        }
    }
}
