/*
 * FreeClimb API
 *
 * FreeClimb is a cloud-based application programming interface (API) that puts the power of the Vail platform in your hands. FreeClimb simplifies the process of creating applications that can use a full range of telephony features without requiring specialized or on-site telephony equipment. Using the FreeClimb REST API to write applications is easy! You have the option to use the language of your choice or hit the API directly. Your application can execute a command by issuing a RESTful request to the FreeClimb API. The base URL to send HTTP requests to the FreeClimb REST API is: /apiserver. FreeClimb authenticates and processes your request.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@freeclimb.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel.DataAnnotations;
using System.IO;
using System.Linq;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using freeclimb.Enums;
using JsonSubTypes;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using Newtonsoft.Json.Serialization;
using OpenAPIDateConverter = freeclimb.Client.OpenAPIDateConverter;

namespace freeclimb.Model
{
    /// <summary>
    /// The OutDial command has started and the actionUrl is being invoked. This request is made in the context of the parent call (Call leg that invoked). A PerCL response is expected.
    /// </summary>
    [DataContract(Name = "OutDialStartWebhook")]
    [JsonConverter(typeof(JsonSubtypes), "RequestType")]
    public partial class OutDialStartWebhook : Webhook, IValidatableObject
    {
        /// <summary>
        /// Gets or Sets CallStatus
        /// </summary>
        [DataMember(Name = "callStatus", EmitDefaultValue = true)]
        public CallStatus? CallStatus { get; set; }

        /// <summary>
        /// Gets or Sets Direction
        /// </summary>
        [DataMember(Name = "direction", EmitDefaultValue = true)]
        public CallDirection? Direction { get; set; }

        /// <summary>
        /// Initializes a new instance of the <see cref="OutDialStartWebhook" /> class.
        /// </summary>
        /// <param name="requestType">Context or reason why this request is being made. Will be outDialStart - The OutDial command has started and the actionUrl is being invoked. (default to &quot;OutDialStartWebhook&quot;).</param>
        /// <param name="accountId">Account ID associated with your account..</param>
        /// <param name="callId">Unique identifier for this Call, generated by FreeClimb.</param>
        /// <param name="from">Phone number of the party that initiated the Call (in E.164 format)..</param>
        /// <param name="to">Phone number provisioned to the customer and to which this Call is directed (in E.164 format)..</param>
        /// <param name="callStatus">callStatus.</param>
        /// <param name="direction">direction.</param>
        /// <param name="conferenceId">This is only populated if request pertains to a conference. Otherwise, it is set to null..</param>
        /// <param name="queueId">This is only populated if the request pertains to a queue. Otherwise, it is set to null..</param>
        /// <param name="dialCallId">ID of the child call that was generated as a result of the Outdial..</param>
        /// <param name="parentCallId">ID of the Call that created this leg (child call). If this was an inbound call or call created via REST API with no parent, this field will be null..</param>
        public OutDialStartWebhook(
            string requestType = @"OutDialStartWebhook",
            string accountId = default(string),
            string callId = default(string),
            string from = default(string),
            string to = default(string),
            CallStatus? callStatus = default(CallStatus?),
            CallDirection? direction = default(CallDirection?),
            string conferenceId = default(string),
            string queueId = default(string),
            string dialCallId = default(string),
            string parentCallId = default(string)
        )
            : base()
        {
            base.RequestType = requestType;

            this.AccountId = accountId;

            this.CallId = callId;

            this.From = from;

            this.To = to;

            this.CallStatus = callStatus;

            this.Direction = direction;

            this.ConferenceId = conferenceId;

            this.QueueId = queueId;

            this.DialCallId = dialCallId;

            this.ParentCallId = parentCallId;
        }

        private static readonly JsonSerializerSettings _serializerSettings =
            new JsonSerializerSettings
            {
                // OpenAPI generated types generally hide default constructors.
                ConstructorHandling = ConstructorHandling.AllowNonPublicDefaultConstructor,
                ContractResolver = new DefaultContractResolver
                {
                    NamingStrategy = new CamelCaseNamingStrategy { OverrideSpecifiedNames = false },
                },
            };

        /// <summary>
        /// Deserializes json payload into instance OutDialStartWebhook
        /// </summary>
        /// <param name="jsonPayload"></param>
        /// <returns>instanceof RemoveFromQueueNotificationWebhook</returns>
        public static OutDialStartWebhook Deserialize(string jsonPayload)
        {
            return (OutDialStartWebhook)
                JsonConvert.DeserializeObject(
                    jsonPayload,
                    typeof(OutDialStartWebhook),
                    _serializerSettings
                );
        }

        /// <summary>
        /// Account ID associated with your account.
        /// </summary>
        /// <value>Account ID associated with your account.</value>
        [DataMember(Name = "accountId", EmitDefaultValue = false)]
        public string AccountId { get; set; }

        /// <summary>
        /// Unique identifier for this Call, generated by FreeClimb
        /// </summary>
        /// <value>Unique identifier for this Call, generated by FreeClimb</value>
        [DataMember(Name = "callId", EmitDefaultValue = false)]
        public string CallId { get; set; }

        /// <summary>
        /// Phone number of the party that initiated the Call (in E.164 format).
        /// </summary>
        /// <value>Phone number of the party that initiated the Call (in E.164 format).</value>
        [DataMember(Name = "from", EmitDefaultValue = false)]
        public string From { get; set; }

        /// <summary>
        /// Phone number provisioned to the customer and to which this Call is directed (in E.164 format).
        /// </summary>
        /// <value>Phone number provisioned to the customer and to which this Call is directed (in E.164 format).</value>
        [DataMember(Name = "to", EmitDefaultValue = false)]
        public string To { get; set; }

        /// <summary>
        /// This is only populated if request pertains to a conference. Otherwise, it is set to null.
        /// </summary>
        /// <value>This is only populated if request pertains to a conference. Otherwise, it is set to null.</value>
        [DataMember(Name = "conferenceId", EmitDefaultValue = true)]
        public string ConferenceId { get; set; }

        /// <summary>
        /// This is only populated if the request pertains to a queue. Otherwise, it is set to null.
        /// </summary>
        /// <value>This is only populated if the request pertains to a queue. Otherwise, it is set to null.</value>
        [DataMember(Name = "queueId", EmitDefaultValue = true)]
        public string QueueId { get; set; }

        /// <summary>
        /// ID of the child call that was generated as a result of the Outdial.
        /// </summary>
        /// <value>ID of the child call that was generated as a result of the Outdial.</value>
        [DataMember(Name = "dialCallId", EmitDefaultValue = false)]
        public string DialCallId { get; set; }

        /// <summary>
        /// ID of the Call that created this leg (child call). If this was an inbound call or call created via REST API with no parent, this field will be null.
        /// </summary>
        /// <value>ID of the Call that created this leg (child call). If this was an inbound call or call created via REST API with no parent, this field will be null.</value>
        [DataMember(Name = "parentCallId", EmitDefaultValue = true)]
        public string ParentCallId { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class OutDialStartWebhook {\n");
            sb.Append("  ").Append(base.ToString().Replace("\n", "\n  ")).Append("\n");
            sb.Append("  RequestType: ").Append(RequestType).Append("\n");
            sb.Append("  AccountId: ").Append(AccountId).Append("\n");
            sb.Append("  CallId: ").Append(CallId).Append("\n");
            sb.Append("  From: ").Append(From).Append("\n");
            sb.Append("  To: ").Append(To).Append("\n");
            sb.Append("  CallStatus: ").Append(CallStatus).Append("\n");
            sb.Append("  Direction: ").Append(Direction).Append("\n");
            sb.Append("  ConferenceId: ").Append(ConferenceId).Append("\n");
            sb.Append("  QueueId: ").Append(QueueId).Append("\n");
            sb.Append("  DialCallId: ").Append(DialCallId).Append("\n");
            sb.Append("  ParentCallId: ").Append(ParentCallId).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public override string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(
                this,
                Newtonsoft.Json.Formatting.Indented
            );
        }

        /// <summary>
        /// Retrieve the KVP Dictionary for the OutDialStartWebhook instance.
        /// </summary>
        /// <returns>KVP Dictionary</returns>
        public override IDictionary<string, object> ToKvp()
        {
            IDictionary<string, object> props = new Dictionary<string, object>();
            props.Add("requestType", RequestType);
            props.Add("accountId", AccountId);
            props.Add("callId", CallId);
            props.Add("from", From);
            props.Add("to", To);
            props.Add("callStatus", CallStatus);
            props.Add("direction", Direction);
            props.Add("conferenceId", ConferenceId);
            props.Add("queueId", QueueId);
            props.Add("dialCallId", DialCallId);
            props.Add("parentCallId", ParentCallId);
            return props;
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(
            ValidationContext validationContext
        )
        {
            return this.BaseValidate(validationContext);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        protected IEnumerable<ValidationResult> BaseValidate(ValidationContext validationContext)
        {
            foreach (var x in base.BaseValidate(validationContext))
            {
                yield return x;
            }
            yield break;
        }
    }
}
