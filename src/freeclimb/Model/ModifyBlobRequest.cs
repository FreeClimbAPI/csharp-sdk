/*
 * FreeClimb API
 *
 * FreeClimb is a cloud-based application programming interface (API) that puts the power of the Vail platform in your hands. FreeClimb simplifies the process of creating applications that can use a full range of telephony features without requiring specialized or on-site telephony equipment. Using the FreeClimb REST API to write applications is easy! You have the option to use the language of your choice or hit the API directly. Your application can execute a command by issuing a RESTful request to the FreeClimb API. The base URL to send HTTP requests to the FreeClimb REST API is: /apiserver. FreeClimb authenticates and processes your request.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@freeclimb.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel.DataAnnotations;
using System.IO;
using System.Linq;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using freeclimb.Enums;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using OpenAPIDateConverter = freeclimb.Client.OpenAPIDateConverter;

namespace freeclimb.Model
{
    /// <summary>
    /// ModifyBlobRequest
    /// </summary>
    [DataContract(Name = "ModifyBlobRequest")]
    public partial class ModifyBlobRequest : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ModifyBlobRequest" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected ModifyBlobRequest() { }

        /// <summary>
        /// Initializes a new instance of the <see cref="ModifyBlobRequest" /> class.
        /// </summary>
        /// <param name="blob">blob (required).</param>
        /// <param name="alias">Custom identifier for this blob that is unique for the owning account. It will be set to the blobId by default if not provided..</param>
        public ModifyBlobRequest(Object blob = default(Object), string alias = default(string))
        {
            // to ensure "blob" is required (not null)
            if (blob == null)
            {
                throw new ArgumentNullException(
                    "blob is a required property for ModifyBlobRequest and cannot be null"
                );
            }
            this.Blob = blob;

            this.Alias = alias;
        }

        /// <summary>
        /// Gets or Sets Blob
        /// </summary>
        [DataMember(Name = "blob", IsRequired = true, EmitDefaultValue = true)]
        public Object Blob { get; set; }

        /// <summary>
        /// Custom identifier for this blob that is unique for the owning account. It will be set to the blobId by default if not provided.
        /// </summary>
        /// <value>Custom identifier for this blob that is unique for the owning account. It will be set to the blobId by default if not provided.</value>
        [DataMember(Name = "alias", EmitDefaultValue = false)]
        public string Alias { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class ModifyBlobRequest {\n");
            sb.Append("  Blob: ").Append(Blob).Append("\n");
            sb.Append("  Alias: ").Append(Alias).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(
                this,
                Newtonsoft.Json.Formatting.Indented,
                new JsonSerializerSettings { NullValueHandling = NullValueHandling.Ignore }
            );
        }

        /// <summary>
        /// Retrieve the KVP Dictionary for the ModifyBlobRequest instance.
        /// </summary>
        /// <returns>KVP Dictionary</returns>
        public virtual IDictionary<string, object> ToKvp()
        {
            IDictionary<string, object> props = new Dictionary<string, object>();
            AddToDictionary(props, "blob", Blob);
            AddToDictionary(props, "alias", Alias);
            return props;
        }

        private IDictionary<string, object> AddToDictionary(
            IDictionary<string, object> dict,
            string key,
            object value
        )
        {
            if (value != null)
            {
                dict.Add(key, value);
            }
            return dict;
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(
            ValidationContext validationContext
        )
        {
            // Alias (string) maxLength
            if (this.Alias != null && this.Alias.Length > 64)
            {
                yield return new ValidationResult(
                    "Invalid value for Alias, length must be less than 64.",
                    new[] { "Alias" }
                );
            }

            yield break;
        }
    }
}
