/*
 * FreeClimb API
 *
 * FreeClimb is a cloud-based application programming interface (API) that puts the power of the Vail platform in your hands. FreeClimb simplifies the process of creating applications that can use a full range of telephony features without requiring specialized or on-site telephony equipment. Using the FreeClimb REST API to write applications is easy! You have the option to use the language of your choice or hit the API directly. Your application can execute a command by issuing a RESTful request to the FreeClimb API. The base URL to send HTTP requests to the FreeClimb REST API is: /apiserver. FreeClimb authenticates and processes your request.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@freeclimb.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel.DataAnnotations;
using System.IO;
using System.Linq;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using freeclimb.Enums;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using OpenAPIDateConverter = freeclimb.Client.OpenAPIDateConverter;

namespace freeclimb.Model
{
    /// <summary>
    /// MessageResultAllOfTfn
    /// </summary>
    [DataContract(Name = "MessageResult_allOf_tfn")]
    public partial class MessageResultAllOfTfn : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="MessageResultAllOfTfn" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected MessageResultAllOfTfn() { }

        /// <summary>
        /// Initializes a new instance of the <see cref="MessageResultAllOfTfn" /> class.
        /// </summary>
        /// <param name="campaignId">TFNCampaignId (required).</param>
        public MessageResultAllOfTfn(string campaignId = default(string))
        {
            // to ensure "campaignId" is required (not null)
            if (campaignId == null)
            {
                throw new ArgumentNullException(
                    "campaignId is a required property for MessageResultAllOfTfn and cannot be null"
                );
            }
            this.CampaignId = campaignId;
        }

        /// <summary>
        /// TFNCampaignId
        /// </summary>
        /// <value>TFNCampaignId</value>
        /*
        <example>cmptfn_387ec3f6e03b340553f35f29c8f118cdf3eae08a</example>
        */
        [DataMember(Name = "campaignId", IsRequired = true, EmitDefaultValue = true)]
        public string CampaignId { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class MessageResultAllOfTfn {\n");
            sb.Append("  CampaignId: ").Append(CampaignId).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(
                this,
                Newtonsoft.Json.Formatting.Indented
            );
        }

        /// <summary>
        /// Retrieve the KVP Dictionary for the MessageResultAllOfTfn instance.
        /// </summary>
        /// <returns>KVP Dictionary</returns>
        public virtual IDictionary<string, object> ToKvp()
        {
            IDictionary<string, object> props = new Dictionary<string, object>();
            props.Add("campaignId", CampaignId);
            return props;
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(
            ValidationContext validationContext
        )
        {
            if (this.CampaignId != null)
            {
                // CampaignId (string) pattern
                Regex regexCampaignId = new Regex(
                    @"cmptfn_[a-fA-F0-9]{40}",
                    RegexOptions.CultureInvariant
                );
                if (!regexCampaignId.Match(this.CampaignId).Success)
                {
                    yield return new System.ComponentModel.DataAnnotations.ValidationResult(
                        "Invalid value for CampaignId, must match a pattern of " + regexCampaignId,
                        new[] { "CampaignId" }
                    );
                }
            }

            yield break;
        }
    }
}
