/*
 * FreeClimb API
 *
 * FreeClimb is a cloud-based application programming interface (API) that puts the power of the Vail platform in your hands. FreeClimb simplifies the process of creating applications that can use a full range of telephony features without requiring specialized or on-site telephony equipment. Using the FreeClimb REST API to write applications is easy! You have the option to use the language of your choice or hit the API directly. Your application can execute a command by issuing a RESTful request to the FreeClimb API. The base URL to send HTTP requests to the FreeClimb REST API is: /apiserver. FreeClimb authenticates and processes your request.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@freeclimb.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = freeclimb.Client.OpenAPIDateConverter;
using freeclimb.Enums;

namespace freeclimb.Enums
{
    /// <summary>
    /// Defines GrammarFileBuiltIn
    /// </summary>
    [JsonConverter(typeof(StringEnumConverter))]
    public enum GrammarFileBuiltIn
    {
        /// <summary>
        /// Enum ALPHNUM6 for value: ALPHNUM6
        /// </summary>
        [EnumMember(Value = "ALPHNUM6")]
        ALPHNUM6 = 1,

        /// <summary>
        /// Enum ANY_DIG for value: ANY_DIG
        /// </summary>
        [EnumMember(Value = "ANY_DIG")]
        ANY_DIG = 2,

        /// <summary>
        /// Enum DIG1 for value: DIG1
        /// </summary>
        [EnumMember(Value = "DIG1")]
        DIG1 = 3,

        /// <summary>
        /// Enum DIG2 for value: DIG2
        /// </summary>
        [EnumMember(Value = "DIG2")]
        DIG2 = 4,

        /// <summary>
        /// Enum DIG3 for value: DIG3
        /// </summary>
        [EnumMember(Value = "DIG3")]
        DIG3 = 5,

        /// <summary>
        /// Enum DIG4 for value: DIG4
        /// </summary>
        [EnumMember(Value = "DIG4")]
        DIG4 = 6,

        /// <summary>
        /// Enum DIG5 for value: DIG5
        /// </summary>
        [EnumMember(Value = "DIG5")]
        DIG5 = 7,

        /// <summary>
        /// Enum DIG6 for value: DIG6
        /// </summary>
        [EnumMember(Value = "DIG6")]
        DIG6 = 8,

        /// <summary>
        /// Enum DIG7 for value: DIG7
        /// </summary>
        [EnumMember(Value = "DIG7")]
        DIG7 = 9,

        /// <summary>
        /// Enum DIG8 for value: DIG8
        /// </summary>
        [EnumMember(Value = "DIG8")]
        DIG8 = 10,

        /// <summary>
        /// Enum DIG9 for value: DIG9
        /// </summary>
        [EnumMember(Value = "DIG9")]
        DIG9 = 11,

        /// <summary>
        /// Enum DIG10 for value: DIG10
        /// </summary>
        [EnumMember(Value = "DIG10")]
        DIG10 = 12,

        /// <summary>
        /// Enum DIG11 for value: DIG11
        /// </summary>
        [EnumMember(Value = "DIG11")]
        DIG11 = 13,

        /// <summary>
        /// Enum UP_TO_20_DIGIT_SEQUENCE for value: UP_TO_20_DIGIT_SEQUENCE
        /// </summary>
        [EnumMember(Value = "UP_TO_20_DIGIT_SEQUENCE")]
        UP_TO_20_DIGIT_SEQUENCE = 14,

        /// <summary>
        /// Enum VERSAY_YESNO for value: VERSAY_YESNO
        /// </summary>
        [EnumMember(Value = "VERSAY_YESNO")]
        VERSAY_YESNO = 15

    }

}
