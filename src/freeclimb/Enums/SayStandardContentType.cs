/*
 * FreeClimb API
 *
 * FreeClimb is a cloud-based application programming interface (API) that puts the power of the Vail platform in your hands. FreeClimb simplifies the process of creating applications that can use a full range of telephony features without requiring specialized or on-site telephony equipment. Using the FreeClimb REST API to write applications is easy! You have the option to use the language of your choice or hit the API directly. Your application can execute a command by issuing a RESTful request to the FreeClimb API. The base URL to send HTTP requests to the FreeClimb REST API is: /apiserver. FreeClimb authenticates and processes your request.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@freeclimb.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel.DataAnnotations;
using System.IO;
using System.Linq;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using freeclimb.Enums;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using OpenAPIDateConverter = freeclimb.Client.OpenAPIDateConverter;

namespace freeclimb.Enums
{
    /// <summary>
    /// The content type to use for the TTS. The complete list of valid values for the content type attribute is shown below.
    /// </summary>
    /// <value>The content type to use for the TTS. The complete list of valid values for the content type attribute is shown below.</value>
    [JsonConverter(typeof(StringEnumConverter))]
    public enum SayStandardContentType
    {
        /// <summary>
        /// Enum TEXT_PLAIN for value: text/plain
        /// </summary>
        [EnumMember(Value = "text/plain")]
        TEXT_PLAIN = 1,

        /// <summary>
        /// Enum APPLICATION_SSML_XML for value: application/ssml+xml
        /// </summary>
        [EnumMember(Value = "application/ssml+xml")]
        APPLICATION_SSML_XML = 2,
    }

    /// <summary>
    /// Converts <see cref="SayStandardContentType"/> to and from the JSON value
    /// </summary>
    public static class SayStandardContentTypeValueConverter
    {
        /// <summary>
        /// Parses a given value to <see cref="SayStandardContentType"/>
        /// </summary>
        /// <param name="value"></param>
        /// <returns></returns>
        public static SayStandardContentType FromString(string value)
        {
            if (value.Equals("text/plain"))
                return SayStandardContentType.TEXT_PLAIN;

            if (value.Equals("application/ssml+xml"))
                return SayStandardContentType.APPLICATION_SSML_XML;

            throw new NotImplementedException(
                $"Could not convert value to type SayStandardContentType: '{value}'"
            );
        }

        /// <summary>
        /// Parses a given value to <see cref="SayStandardContentType"/>
        /// </summary>
        /// <param name="value"></param>
        /// <returns></returns>
        public static SayStandardContentType? FromStringOrDefault(string value)
        {
            if (value.Equals("text/plain"))
                return SayStandardContentType.TEXT_PLAIN;

            if (value.Equals("application/ssml+xml"))
                return SayStandardContentType.APPLICATION_SSML_XML;

            return null;
        }
    }
}
