/*
 * FreeClimb API
 *
 * FreeClimb is a cloud-based application programming interface (API) that puts the power of the Vail platform in your hands. FreeClimb simplifies the process of creating applications that can use a full range of telephony features without requiring specialized or on-site telephony equipment. Using the FreeClimb REST API to write applications is easy! You have the option to use the language of your choice or hit the API directly. Your application can execute a command by issuing a RESTful request to the FreeClimb API. The base URL to send HTTP requests to the FreeClimb REST API is: /apiserver. FreeClimb authenticates and processes your request.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@freeclimb.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel.DataAnnotations;
using System.IO;
using System.Linq;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using freeclimb.Enums;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using OpenAPIDateConverter = freeclimb.Client.OpenAPIDateConverter;

namespace freeclimb.Enums
{
    /// <summary>
    /// Entity type behind the brand. This is the form of business establishment.
    /// </summary>
    /// <value>Entity type behind the brand. This is the form of business establishment.</value>
    [JsonConverter(typeof(StringEnumConverter))]
    public enum SMSTenDLCBrandEntityType
    {
        /// <summary>
        /// Enum PRIVATE_PROFIT for value: PRIVATE_PROFIT
        /// </summary>
        [EnumMember(Value = "PRIVATE_PROFIT")]
        PRIVATE_PROFIT = 1,

        /// <summary>
        /// Enum PUBLIC_PROFIT for value: PUBLIC_PROFIT
        /// </summary>
        [EnumMember(Value = "PUBLIC_PROFIT")]
        PUBLIC_PROFIT = 2,

        /// <summary>
        /// Enum NON_PROFIT for value: NON_PROFIT
        /// </summary>
        [EnumMember(Value = "NON_PROFIT")]
        NON_PROFIT = 3,

        /// <summary>
        /// Enum GOVERNMENT for value: GOVERNMENT
        /// </summary>
        [EnumMember(Value = "GOVERNMENT")]
        GOVERNMENT = 4,

        /// <summary>
        /// Enum SOLE_PROPRIETOR for value: SOLE_PROPRIETOR
        /// </summary>
        [EnumMember(Value = "SOLE_PROPRIETOR")]
        SOLE_PROPRIETOR = 5,
    }

    /// <summary>
    /// Converts <see cref="SMSTenDLCBrandEntityType"/> to and from the JSON value
    /// </summary>
    public static class SMSTenDLCBrandEntityTypeValueConverter
    {
        /// <summary>
        /// Parses a given value to <see cref="SMSTenDLCBrandEntityType"/>
        /// </summary>
        /// <param name="value"></param>
        /// <returns></returns>
        public static SMSTenDLCBrandEntityType FromString(string value)
        {
            if (value.Equals("PRIVATE_PROFIT"))
                return SMSTenDLCBrandEntityType.PRIVATE_PROFIT;

            if (value.Equals("PUBLIC_PROFIT"))
                return SMSTenDLCBrandEntityType.PUBLIC_PROFIT;

            if (value.Equals("NON_PROFIT"))
                return SMSTenDLCBrandEntityType.NON_PROFIT;

            if (value.Equals("GOVERNMENT"))
                return SMSTenDLCBrandEntityType.GOVERNMENT;

            if (value.Equals("SOLE_PROPRIETOR"))
                return SMSTenDLCBrandEntityType.SOLE_PROPRIETOR;

            throw new NotImplementedException(
                $"Could not convert value to type SMSTenDLCBrandEntityType: '{value}'"
            );
        }

        /// <summary>
        /// Parses a given value to <see cref="SMSTenDLCBrandEntityType"/>
        /// </summary>
        /// <param name="value"></param>
        /// <returns></returns>
        public static SMSTenDLCBrandEntityType? FromStringOrDefault(string value)
        {
            if (value.Equals("PRIVATE_PROFIT"))
                return SMSTenDLCBrandEntityType.PRIVATE_PROFIT;

            if (value.Equals("PUBLIC_PROFIT"))
                return SMSTenDLCBrandEntityType.PUBLIC_PROFIT;

            if (value.Equals("NON_PROFIT"))
                return SMSTenDLCBrandEntityType.NON_PROFIT;

            if (value.Equals("GOVERNMENT"))
                return SMSTenDLCBrandEntityType.GOVERNMENT;

            if (value.Equals("SOLE_PROPRIETOR"))
                return SMSTenDLCBrandEntityType.SOLE_PROPRIETOR;

            return null;
        }
    }
}
