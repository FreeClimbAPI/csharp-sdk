/*
 * FreeClimb API
 *
 * FreeClimb is a cloud-based application programming interface (API) that puts the power of the Vail platform in your hands. FreeClimb simplifies the process of creating applications that can use a full range of telephony features without requiring specialized or on-site telephony equipment. Using the FreeClimb REST API to write applications is easy! You have the option to use the language of your choice or hit the API directly. Your application can execute a command by issuing a RESTful request to the FreeClimb API. The base URL to send HTTP requests to the FreeClimb REST API is: /apiserver. FreeClimb authenticates and processes your request.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@freeclimb.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel.DataAnnotations;
using System.IO;
using System.Linq;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using freeclimb.Enums;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using OpenAPIDateConverter = freeclimb.Client.OpenAPIDateConverter;

namespace freeclimb.Enums
{
    /// <summary>
    /// The engine to use for the TTS. The complete list of valid values for the engine attribute is shown below.
    /// </summary>
    /// <value>The engine to use for the TTS. The complete list of valid values for the engine attribute is shown below.</value>
    [JsonConverter(typeof(StringEnumConverter))]
    public enum TTSEngineName
    {
        /// <summary>
        /// Enum FREECLIMB_STANDARD for value: freeclimb.standard
        /// </summary>
        [EnumMember(Value = "freeclimb.standard")]
        FREECLIMB_STANDARD = 1,

        /// <summary>
        /// Enum FREECLIMB_NEURAL for value: freeclimb.neural
        /// </summary>
        [EnumMember(Value = "freeclimb.neural")]
        FREECLIMB_NEURAL = 2,

        /// <summary>
        /// Enum ELEVEN_LABS for value: ElevenLabs
        /// </summary>
        [EnumMember(Value = "ElevenLabs")]
        ELEVEN_LABS = 3,
    }

    /// <summary>
    /// Converts <see cref="TTSEngineName"/> to and from the JSON value
    /// </summary>
    public static class TTSEngineNameValueConverter
    {
        /// <summary>
        /// Parses a given value to <see cref="TTSEngineName"/>
        /// </summary>
        /// <param name="value"></param>
        /// <returns></returns>
        public static TTSEngineName FromString(string value)
        {
            if (value.Equals("freeclimb.standard"))
                return TTSEngineName.FREECLIMB_STANDARD;

            if (value.Equals("freeclimb.neural"))
                return TTSEngineName.FREECLIMB_NEURAL;

            if (value.Equals("ElevenLabs"))
                return TTSEngineName.ELEVEN_LABS;

            throw new NotImplementedException(
                $"Could not convert value to type TTSEngineName: '{value}'"
            );
        }

        /// <summary>
        /// Parses a given value to <see cref="TTSEngineName"/>
        /// </summary>
        /// <param name="value"></param>
        /// <returns></returns>
        public static TTSEngineName? FromStringOrDefault(string value)
        {
            if (value.Equals("freeclimb.standard"))
                return TTSEngineName.FREECLIMB_STANDARD;

            if (value.Equals("freeclimb.neural"))
                return TTSEngineName.FREECLIMB_NEURAL;

            if (value.Equals("ElevenLabs"))
                return TTSEngineName.ELEVEN_LABS;

            return null;
        }
    }
}
