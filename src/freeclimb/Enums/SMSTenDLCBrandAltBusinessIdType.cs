/*
 * FreeClimb API
 *
 * FreeClimb is a cloud-based application programming interface (API) that puts the power of the Vail platform in your hands. FreeClimb simplifies the process of creating applications that can use a full range of telephony features without requiring specialized or on-site telephony equipment. Using the FreeClimb REST API to write applications is easy! You have the option to use the language of your choice or hit the API directly. Your application can execute a command by issuing a RESTful request to the FreeClimb API. The base URL to send HTTP requests to the FreeClimb REST API is: /apiserver. FreeClimb authenticates and processes your request.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@freeclimb.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel.DataAnnotations;
using System.IO;
using System.Linq;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using freeclimb.Enums;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using OpenAPIDateConverter = freeclimb.Client.OpenAPIDateConverter;

namespace freeclimb.Enums
{
    /// <summary>
    /// The type of the Alternative business identifier
    /// </summary>
    /// <value>The type of the Alternative business identifier</value>
    [JsonConverter(typeof(StringEnumConverter))]
    public enum SMSTenDLCBrandAltBusinessIdType
    {
        /// <summary>
        /// Enum NONE for value: NONE
        /// </summary>
        [EnumMember(Value = "NONE")]
        NONE = 1,

        /// <summary>
        /// Enum DUNS for value: DUNS
        /// </summary>
        [EnumMember(Value = "DUNS")]
        DUNS = 2,

        /// <summary>
        /// Enum GIIN for value: GIIN
        /// </summary>
        [EnumMember(Value = "GIIN")]
        GIIN = 3,

        /// <summary>
        /// Enum LEI for value: LEI
        /// </summary>
        [EnumMember(Value = "LEI")]
        LEI = 4,
    }

    /// <summary>
    /// Converts <see cref="SMSTenDLCBrandAltBusinessIdType"/> to and from the JSON value
    /// </summary>
    public static class SMSTenDLCBrandAltBusinessIdTypeValueConverter
    {
        /// <summary>
        /// Parses a given value to <see cref="SMSTenDLCBrandAltBusinessIdType"/>
        /// </summary>
        /// <param name="value"></param>
        /// <returns></returns>
        public static SMSTenDLCBrandAltBusinessIdType FromString(string value)
        {
            if (value.Equals("NONE"))
                return SMSTenDLCBrandAltBusinessIdType.NONE;

            if (value.Equals("DUNS"))
                return SMSTenDLCBrandAltBusinessIdType.DUNS;

            if (value.Equals("GIIN"))
                return SMSTenDLCBrandAltBusinessIdType.GIIN;

            if (value.Equals("LEI"))
                return SMSTenDLCBrandAltBusinessIdType.LEI;

            throw new NotImplementedException(
                $"Could not convert value to type SMSTenDLCBrandAltBusinessIdType: '{value}'"
            );
        }

        /// <summary>
        /// Parses a given value to <see cref="SMSTenDLCBrandAltBusinessIdType"/>
        /// </summary>
        /// <param name="value"></param>
        /// <returns></returns>
        public static SMSTenDLCBrandAltBusinessIdType? FromStringOrDefault(string value)
        {
            if (value.Equals("NONE"))
                return SMSTenDLCBrandAltBusinessIdType.NONE;

            if (value.Equals("DUNS"))
                return SMSTenDLCBrandAltBusinessIdType.DUNS;

            if (value.Equals("GIIN"))
                return SMSTenDLCBrandAltBusinessIdType.GIIN;

            if (value.Equals("LEI"))
                return SMSTenDLCBrandAltBusinessIdType.LEI;

            return null;
        }
    }
}
