/*
 * FreeClimb API
 *
 * FreeClimb is a cloud-based application programming interface (API) that puts the power of the Vail platform in your hands. FreeClimb simplifies the process of creating applications that can use a full range of telephony features without requiring specialized or on-site telephony equipment. Using the FreeClimb REST API to write applications is easy! You have the option to use the language of your choice or hit the API directly. Your application can execute a command by issuing a RESTful request to the FreeClimb API. The base URL to send HTTP requests to the FreeClimb REST API is: /apiserver. FreeClimb authenticates and processes your request.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@freeclimb.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */




using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using freeclimb.Api;
using freeclimb.Model;
using freeclimb.Client;
using System.Reflection;
using Newtonsoft.Json;
using System.Globalization;
using freeclimb.Enums;


namespace freeclimb.Test.Enums
{
    /// <summary>
    ///  Class for testing MachineType
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class MachineTypeTests
    {
        private MachineType instance;

        public MachineTypeTests()
        {
            instance = new MachineType();
        }

        /// <summary>
        /// Test an instance of MachineType
        /// </summary>
        [Fact]
        public void MachineTypeInstanceTest()
        {
            Assert.IsType<MachineType>(instance);
        }


        [Fact]
        public void TestANSWERING_MACHINEShouldWork()
        {
            MachineType test = MachineType.ANSWERING_MACHINE;
            Assert.Equal(typeof(MachineType), test.GetType());
        }

        [Fact]
        public void TestANSWERING_MACHINEShouldSerializeToEnum()
        {
            MachineType expectedValue = MachineType.ANSWERING_MACHINE;
            MachineType calculatedValue = (MachineType)Enum.Parse(typeof(MachineType), "ANSWERING_MACHINE");
            Assert.Equal(expectedValue, calculatedValue);
        }

        [Fact]
        public void TestANSWERING_MACHINEShouldDeserializeToString()
        {
            MachineType test = MachineType.ANSWERING_MACHINE;
            string expectedValue = "ANSWERING_MACHINE";
            string calculatedValue = test.ToString();
            Assert.Equal(expectedValue, calculatedValue);
        }

        [Fact]
        public void TestFAX_MACHINEShouldWork()
        {
            MachineType test = MachineType.FAX_MACHINE;
            Assert.Equal(typeof(MachineType), test.GetType());
        }

        [Fact]
        public void TestFAX_MACHINEShouldSerializeToEnum()
        {
            MachineType expectedValue = MachineType.FAX_MACHINE;
            MachineType calculatedValue = (MachineType)Enum.Parse(typeof(MachineType), "FAX_MACHINE");
            Assert.Equal(expectedValue, calculatedValue);
        }

        [Fact]
        public void TestFAX_MACHINEShouldDeserializeToString()
        {
            MachineType test = MachineType.FAX_MACHINE;
            string expectedValue = "FAX_MACHINE";
            string calculatedValue = test.ToString();
            Assert.Equal(expectedValue, calculatedValue);
        }

    }
}
